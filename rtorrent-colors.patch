--- rtorrent-0.6.1/src/display/canvas.cc.orig	2006-08-11 12:45:46.000000000 +0200
+++ rtorrent-0.6.1/src/display/canvas.cc	2006-08-20 16:33:39.528724000 +0200
@@ -88,6 +88,7 @@
   nodelay(stdscr, TRUE);
   keypad(stdscr, TRUE);
   curs_set(0);
+  start_color();
 }
 
 void
--- rtorrent-0.6.1/src/display/window_download_statusbar.cc.orig	2006-08-04 23:53:27.000000000 +0200
+++ rtorrent-0.6.1/src/display/window_download_statusbar.cc	2006-08-20 16:36:24.163013000 +0200
@@ -86,6 +86,11 @@
                   m_download->tracker_list()->is_busy() ? 'C' : ' ',
                   (int)(m_download->download()->tracker_list().timeout() / 1000000),
                   buffer);
+
+  m_canvas->set_attr(0, 0, m_canvas->get_screen_width(), A_REVERSE, 0);
+  m_canvas->set_attr(0, 1, m_canvas->get_screen_width(), A_REVERSE, 0);
+  m_canvas->set_attr(0, 2, m_canvas->get_screen_width(), A_REVERSE, 0);
+
 }
 
 }
--- rtorrent-0.6.1/src/display/window_statusbar.cc.orig	2006-07-27 21:44:30.000000000 +0200
+++ rtorrent-0.6.1/src/display/window_statusbar.cc	2006-08-20 16:38:24.102508750 +0200
@@ -97,6 +97,7 @@
   if (last > buffer) {
     position = print_status_extra(buffer, last, control);
     m_canvas->print(m_canvas->width() - (position - buffer), 0, "%s", buffer);
+    m_canvas->set_attr(0, 0, m_canvas->get_screen_width(), A_REVERSE, 0);
   }
 
   m_lastTick = control->tick();
--- rtorrent-0.6.1/src/display/window_title.cc.orig	2006-08-04 15:52:16.000000000 +0200
+++ rtorrent-0.6.1/src/display/window_title.cc	2006-08-20 16:39:52.604039750 +0200
@@ -48,6 +48,7 @@
 
   m_canvas->print(std::max(0, ((int)m_canvas->width() - (int)m_title.size()) / 2 - 4), 0,
                   "*** %s ***", m_title.c_str());
+  m_canvas->set_attr(0, 0, m_canvas->get_screen_width(), A_REVERSE, 0);
 }
 
 }
--- rtorrent-0.6.1/src/display/window_download_list.cc.orig	2006-08-04 15:38:24.000000000 +0200
+++ rtorrent-0.6.1/src/display/window_download_list.cc	2006-08-20 16:48:34.368648000 +0200
@@ -38,6 +38,8 @@
 
 #include <rak/algorithm.h>
 
+#include <torrent/rate.h>
+
 #include "core/download.h"
 #include "core/view.h"
 
@@ -89,20 +91,47 @@
   if (range.second != m_view->end_visible())
     ++range.second;
 
+  init_pair(1, COLOR_GREEN, COLOR_BLACK);
+  init_pair(2, COLOR_YELLOW, COLOR_BLACK);
+  init_pair(3, COLOR_RED, COLOR_BLACK);
+  init_pair(4, COLOR_BLUE, COLOR_BLACK);
+
   int pos = 1;
 
   while (range.first != range.second) {
     char buffer[m_canvas->width() + 1];
     char* last = buffer + m_canvas->width() - 2 + 1;
+    int col = 0;
+    double ratio = 0;
+    core::Download* d = *range.first;
+
+    if (d->download()->bytes_done())
+      ratio = (double)d->info()->up_rate()->total() / (double)d->download()->bytes_done();
+    if (ratio >= 1.0)
+      col = 1;
+    else if (ratio >= 0.5)
+      col = 2;
+    else
+      col = 3;
+
+    print_download_title(buffer, last, *range.first, ratio);
+    m_canvas->print(0, pos, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
+    if (d->info()->is_open())
+      m_canvas->set_attr(0, pos, m_canvas->get_screen_width(), (d->is_done())?0:A_BOLD,
+        (d->is_done())?col:4);
+    pos++;
 
-    print_download_title(buffer, last, *range.first);
-    m_canvas->print(0, pos++, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
-    
     print_download_info(buffer, last, *range.first);
-    m_canvas->print(0, pos++, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
+    m_canvas->print(0, pos, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
+    if (!d->info()->is_active())
+      m_canvas->set_attr(0, pos, m_canvas->get_screen_width(), A_BOLD, 8);
+    pos++;
 
     print_download_status(buffer, last, *range.first);
-    m_canvas->print(0, pos++, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
+    m_canvas->print(0, pos, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
+    if (!d->info()->is_active())
+      m_canvas->set_attr(0, pos, m_canvas->get_screen_width(), A_BOLD, 8);
+    pos++;
 
     ++range.first;
   }    
--- rtorrent-0.7.1/src/display/utils.h.orig	2006-11-16 17:25:50.000000000 +0100
+++ rtorrent-0.7.1/src/display/utils.h	2007-01-13 09:34:22.563730786 +0100
@@ -64,7 +64,7 @@
 char*       print_ddhhmm(char* first, char* last, time_t t);
 char*       print_ddmmyyyy(char* first, char* last, time_t t);
 
-char*       print_download_title(char* first, char* last, core::Download* d);
+char*       print_download_title(char* first, char* last, core::Download* d, double ratio);
 char*       print_download_info(char* first, char* last, core::Download* d);
 char*       print_download_status(char* first, char* last, core::Download* d);
 char*       print_download_time_left(char* first, char* last, core::Download* d);
--- rtorrent-0.7.2/src/display/utils.cc.orig	2007-01-20 19:42:22.000000000 +0100
+++ rtorrent-0.7.2/src/display/utils.cc	2007-01-24 20:56:54.529507176 +0100
@@ -123,8 +123,8 @@
 }
 
 char*
-print_download_title(char* first, char* last, core::Download* d) {
-  return print_buffer(first, last, " %s", d->info()->name().c_str());
+print_download_title(char* first, char* last, core::Download* d, double ratio) {
+  return print_buffer(first, last, " %-82s  R: %5.2f", d->info()->name().c_str(), ratio);
 }
 
 char*
@@ -158,10 +158,9 @@
     first = print_buffer(first, last, "                ");
   }
 
-  first = print_buffer(first, last, " [%c%c R: %4.2f",
+  first = print_buffer(first, last, " [%c%c",
                        rpc::call_command_string("d.tied_to_file", rpc::make_target(d)).empty() ? ' ' : 'T',
-                       rpc::call_command_value("d.ignore_commands", rpc::make_target(d)) == 0 ? ' ' : 'I',
-                       (double)rpc::call_command_value("d.ratio", rpc::make_target(d)) / 1000.0);
+                       rpc::call_command_value("d.ignore_commands", rpc::make_target(d)) == 0 ? ' ' : 'I');
 
   if (d->priority() != 2)
     first = print_buffer(first, last, " %s]", rpc::call_command_string("d.get_priority_str", rpc::make_target(d)).c_str());
@@ -231,17 +230,18 @@
 print_client_version(char* first, char* last, const torrent::ClientInfo& clientInfo) {
   switch (torrent::ClientInfo::version_size(clientInfo.type())) {
   case 4:
-    return print_buffer(first, last, "%s %hhu.%hhu.%hhu.%hhu",
+    return print_buffer(first, last, "%-12s %hhu.%hhu.%hhu.%hhu",
                         clientInfo.short_description(),
                         clientInfo.version()[0], clientInfo.version()[1],
                         clientInfo.version()[2], clientInfo.version()[3]);
   case 3:
-    return print_buffer(first, last, "%s %hhu.%hhu.%hhu",
+    return print_buffer(first, last, "%-12s %hhu.%hhu.%hhu",
                         clientInfo.short_description(),
                         clientInfo.version()[0], clientInfo.version()[1],
                         clientInfo.version()[2]);
   default:
-    return print_buffer(first, last, "%s", clientInfo.short_description());
+    return print_buffer(first, last, "%s",
+                        std::strncmp(clientInfo.short_description(), "Unknown", 7) ? clientInfo.short_description() : " ");
   }
 }
 
--- rtorrent-0.7.1/src/display/window_peer_list.cc.orig	2006-12-02 09:28:26.000000000 +0100
+++ rtorrent-0.7.1/src/display/window_peer_list.cc	2007-01-13 10:03:47.977730506 +0100
@@ -77,7 +77,7 @@
   m_canvas->print(x, y, "DONE");    x += 6;
   m_canvas->print(x, y, "REQ");     x += 6;
   m_canvas->print(x, y, "SNUB");    x += 6;
-  m_canvas->print(x, y, "FAILED");
+  m_canvas->print(x, y, "FAIL");
 
   ++y;
 
@@ -137,7 +137,7 @@
     if (p.failed_counter() != 0)
       m_canvas->print(x, y, "%u", p.failed_counter());
 
-    x += 7;
+    x += 5;
 
     char buf[128];
     print_client_version(buf, buf + 128, p.info()->client_info());
