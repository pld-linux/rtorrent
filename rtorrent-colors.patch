--- rtorrent-0.5.0/src/display/canvas.cc.orig	2006-02-11 17:12:24.000000000 +0100
+++ rtorrent-0.5.0/src/display/canvas.cc	2006-05-04 14:40:32.000000000 +0200
@@ -65,6 +65,7 @@
   nodelay(stdscr, TRUE);
   keypad(stdscr, TRUE);
   curs_set(0);
+  start_color();
 }
 
 void
--- rtorrent-0.5.0/src/display/window_download_statusbar.cc.orig	2006-03-31 23:41:20.000000000 +0200
+++ rtorrent-0.5.0/src/display/window_download_statusbar.cc	2006-05-04 14:34:05.000000000 +0200
@@ -88,6 +88,11 @@
 		  m_download->tracker_list()->is_busy() ? 'C' : ' ',
 		  (int)(m_download->download()->tracker_list().timeout() / 1000000),
 		  buffer);
+
+  m_canvas->set_attr(0, 0, m_canvas->get_screen_width(), A_REVERSE, 0);
+  m_canvas->set_attr(0, 1, m_canvas->get_screen_width(), A_REVERSE, 0);
+  m_canvas->set_attr(0, 2, m_canvas->get_screen_width(), A_REVERSE, 0);
+
 }
 
 }
--- rtorrent-0.5.0/src/display/window_statusbar.cc.orig	2006-02-09 17:23:36.000000000 +0100
+++ rtorrent-0.5.0/src/display/window_statusbar.cc	2006-05-04 14:36:04.000000000 +0200
@@ -103,6 +103,7 @@
   if (last > buffer) {
     position = print_status_extra(buffer, last, m_control);
     m_canvas->print(m_canvas->get_width() - (position - buffer), 0, "%s", buffer);
+    m_canvas->set_attr(0, 0, m_canvas->get_screen_width(), A_REVERSE, 0);
   }
 
 
--- rtorrent-0.5.0/src/display/window_title.cc.orig	2006-02-09 17:23:36.000000000 +0100
+++ rtorrent-0.5.0/src/display/window_title.cc	2006-05-04 14:36:43.000000000 +0200
@@ -53,6 +53,7 @@
 
   m_canvas->print(std::max(0, (m_canvas->get_width() - (int)m_title.size()) / 2 - 4), 0,
 		  "*** %s ***", m_title.c_str());
+  m_canvas->set_attr(0, 0, m_canvas->get_screen_width(), A_REVERSE, 0);
 }
 
 }
--- rtorrent-0.5.3/src/display/client_info.cc.orig	2006-07-08 14:41:54.355385750 +0200
+++ rtorrent-0.5.3/src/display/client_info.cc	2006-07-08 14:43:45.662342000 +0200
@@ -137,7 +137,7 @@
       if (id[1] == 'l' && id[2] == 't' && !std::strncmp(id+16, "UDP0", 4))
 	first = print_buffer(first, last, "BitSpirit (spoofed ID)");
       else
-      first = print_buffer(first, last, "%s %hhu.%hhu.%hhu.%hhu", itr->second,
+      first = print_buffer(first, last, "%-12s %hhu.%hhu.%hhu.%hhu", itr->second,
 			   rak::hexchar_to_value(id[3]), rak::hexchar_to_value(id[4]),
 			   rak::hexchar_to_value(id[5]), rak::hexchar_to_value(id[6]));
     }
@@ -147,7 +147,7 @@
 			   rak::hexchar_to_value(id[3]), rak::hexchar_to_value(id[4]),
 			   rak::hexchar_to_value(id[5]), rak::hexchar_to_value(id[6]));
 
-  } else if (std::isalpha(id[0]) && id[4] == '-' &&
+  } else if (std::isalpha(id[0]) && id[5] == '-' &&
 	     std::isxdigit(id[1]) && std::isxdigit(id[2]) && std::isxdigit(id[3])) {
     // TYPE_THREE_COMPACT.
 
@@ -155,7 +155,7 @@
 				client_info_equal(id, sizeof_key(TYPE_COMPACT)));
 
     if (itr != m_containers[TYPE_COMPACT].end())
-      first = print_buffer(first, last, "%s %hhu.%hhu.%hhu", itr->second,
+      first = print_buffer(first, last, "%-12s %hhu.%hhu.%hhu", itr->second,
 			   rak::hexchar_to_value(id[1]), rak::hexchar_to_value(id[2]), rak::hexchar_to_value(id[3]));
     
     else
@@ -170,7 +170,7 @@
 				client_info_equal(id, sizeof_key(TYPE_MAINLINE)));
 
     if (itr != m_containers[TYPE_MAINLINE].end())
-      first = print_buffer(first, last, "%s %hhu.%hhu.%hhu", itr->second,
+      first = print_buffer(first, last, "%-12s %hhu.%hhu.%hhu", itr->second,
 			   rak::hexchar_to_value(id[1]), rak::hexchar_to_value(id[3]), rak::hexchar_to_value(id[5]));
     
     else
@@ -187,13 +187,13 @@
   } else {
     if (std::strncmp(id, "exbc", 4) == 0) {
       if (id[4] == 0)
-        first = print_buffer(first, last, "%s %hhu.%02hhu", "BitComet", id[4], id[5]);
+        first = print_buffer(first, last, "%-12s %hhu.%02hhu", "BitComet", id[4], id[5]);
       else
-	first = print_buffer(first, last, "%s %hhu.%hhu", "BitLord", id[4], id[5]);
+	first = print_buffer(first, last, "%-12s %hhu.%hhu", "BitLord", id[4], id[5]);
     } else if (id[2] == 'B' && id[3] == 'S') {
-      first = print_buffer(first, last, "BitSpirit %hhu.%hhu", id[1], id[0]);
+      first = print_buffer(first, last, "%-12s %hhu.%hhu", "BitSpirit", id[1], id[0]);
     } else if (id[0] == '-' && id[1] == 'M' && id[2] == 'L') {
-      first = print_buffer(first, last, "MLDonkey %hhu.%hhu.%hhu", 
+      first = print_buffer(first, last, "%-12s %hhu.%hhu.%hhu", "MLDonkey",
 		rak::hexchar_to_value(id[3]), rak::hexchar_to_value(id[5]), rak::hexchar_to_value(id[7]));
     } else if (id[0] == '-' && id[1] == 'G' && id[2] == '3') {
       first = print_buffer(first, last, "G3 Torrent");
@@ -202,10 +202,10 @@
     } else if (std::strncmp(id+16, "UDP0", 4) == 0) {
       first = print_buffer(first, last, "BitSpirit (cloaked)");
     } else if (std::strncmp(id+2, "Mbrst", 5) == 0) {
-      first = print_buffer(first, last, "burst! %hhu.%hhu.%hhu",
+      first = print_buffer(first, last, "%-12s %hhu.%hhu.%hhu", "burst!",
 		rak::hexchar_to_value(id[4]), rak::hexchar_to_value(id[6]), rak::hexchar_to_value(id[8]));
     } else
-    first = print_buffer(first, last, "unknown");
+    first = print_buffer(first, last, "");
   }
 
   return first;
--- rtorrent-0.5.1/src/display/window_download_list.cc.orig	2006-05-01 18:30:08.000000000 +0200
+++ rtorrent-0.5.1/src/display/window_download_list.cc	2006-05-07 18:14:05.000000000 +0200
@@ -38,6 +38,8 @@
 
 #include <rak/algorithm.h>
 
+#include <torrent/rate.h>
+
 #include "core/download.h"
 #include "core/view.h"
 
@@ -89,21 +91,47 @@
   if (range.second != m_view->end())
     ++range.second;
 
+  init_pair(1, COLOR_GREEN, COLOR_BLACK);
+  init_pair(2, COLOR_YELLOW, COLOR_BLACK);
+  init_pair(3, COLOR_RED, COLOR_BLACK);
+  init_pair(4, COLOR_BLUE, COLOR_BLACK);
+
   int pos = 1;
 
   while (range.first != range.second) {
     char buffer[m_canvas->get_width()];
     char* position;
     char* last = buffer + m_canvas->get_width() - 2;
+    int col = 0;
+    double ratio = 0;
+    core::Download* d = *range.first;
+
+    if (d->download()->bytes_done())
+      ratio = (double)d->download()->up_rate()->total() / (double)d->download()->bytes_done();
+    if (ratio >= 1.0)
+      col = 1;
+    else if (ratio >= 0.5)
+      col = 2;
+    else
+      col = 3;
+
+    position = print_download_title(buffer, last, *range.first, ratio);
+    m_canvas->print(0, pos, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
+    if (d->download()->is_open())
+      m_canvas->set_attr(0, pos, m_canvas->get_screen_width(), (d->is_done())?0:A_BOLD, (d->is_done())?col:4);
+    pos++;
 
-    position = print_download_title(buffer, last, *range.first);
-    m_canvas->print(0, pos++, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
-    
     position = print_download_info(buffer, last, *range.first);
-    m_canvas->print(0, pos++, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
+    m_canvas->print(0, pos, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
+    if (!d->download()->is_active())
+      m_canvas->set_attr(0, pos, m_canvas->get_screen_width(), A_BOLD, 8);
+    pos++;
 
     position = print_download_status(buffer, last, *range.first);
-    m_canvas->print(0, pos++, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
+    m_canvas->print(0, pos, "%c %s", range.first == m_view->focus() ? '*' : ' ', buffer);
+    if (!d->download()->is_active())
+      m_canvas->set_attr(0, pos, m_canvas->get_screen_width(), A_BOLD, 8);
+    pos++;
 
     ++range.first;
   }    
--- rtorrent-0.5.1/src/display/utils.h.orig	2006-05-01 18:29:58.000000000 +0200
+++ rtorrent-0.5.1/src/display/utils.h	2006-05-07 18:02:02.000000000 +0200
@@ -63,7 +63,7 @@
 char*       print_ddhhmm(char* first, char* last, time_t t);
 char*       print_ddmmyyyy(char* first, char* last, time_t t);
 
-char*       print_download_title(char* first, char* last, core::Download* d);
+char*       print_download_title(char* first, char* last, core::Download* d, double ratio);
 char*       print_download_info(char* first, char* last, core::Download* d);
 char*       print_download_status(char* first, char* last, core::Download* d);
 char*       print_download_time_left(char* first, char* last, core::Download* d);
--- rtorrent-0.6.0/src/display/utils.cc.orig	2006-07-07 22:14:21.000000000 +0200
+++ rtorrent-0.6.0/src/display/utils.cc	2006-07-10 18:32:47.066933500 +0200
@@ -117,8 +117,8 @@
 }
 
 char*
-print_download_title(char* first, char* last, core::Download* d) {
-  return print_buffer(first, last, " %s", d->download()->name().c_str());
+print_download_title(char* first, char* last, core::Download* d, double ratio) {
+  return print_buffer(first, last, " %-82s  R: %5.2f", d->download()->name().c_str(), ratio);
 }
 
 char*
@@ -152,10 +152,9 @@
     first = print_buffer(first, last, "                ");
   }
 
-  first = print_buffer(first, last, " [%c%c R: %3.2f",
+  first = print_buffer(first, last, " [%c%c",
                        d->variable()->get_string("tied_to_file").empty() ? ' ' : 'T',
-                       d->variable()->get_value("ignore_commands") == 0 ? ' ' : 'I',
-                       d->download()->bytes_done() > 0 ? (double)(100 * d->download()->up_rate()->total() / d->download()->bytes_done()) / 100 : 0.0);
+                       d->variable()->get_value("ignore_commands") == 0 ? ' ' : 'I');
 
   if (d->priority() != 2)
     first = print_buffer(first, last, " %s]", core::Download::priority_to_string(d->priority()));
