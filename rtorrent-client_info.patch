--- rtorrent-0.6.3/src/display/client_info.cc.orig	2006-09-29 13:56:40.000000000 +0200
+++ rtorrent-0.6.3/src/display/client_info.cc	2006-10-29 02:07:44.887169520 +0100
@@ -136,9 +136,14 @@
                                       client_info_equal(id + 1, sizeof_key(TYPE_AZUREUS)));
 
     if (itr != m_containers[TYPE_AZUREUS].end())
-      first = print_buffer(first, last, "%s %hhu.%hhu.%hhu.%hhu", itr->second,
-                           rak::hexchar_to_value(id[3]), rak::hexchar_to_value(id[4]),
-                           rak::hexchar_to_value(id[5]), rak::hexchar_to_value(id[6]));
+    {
+      if (id[1] == 'l' && id[2] == 't' && !std::strncmp(id+16, "UDP0", 4))
+        first = print_buffer(first, last, "BitSpirit (spoofed ID)");
+      else
+        first = print_buffer(first, last, "%s %hhu.%hhu.%hhu.%hhu", itr->second,
+          rak::hexchar_to_value(id[3]), rak::hexchar_to_value(id[4]),
+          rak::hexchar_to_value(id[5]), rak::hexchar_to_value(id[6]));
+    }
     
     else
       first = print_buffer(first, last, "unknown %c%c %hhu.%hhu.%hhu.%hhu", id[1], id[2],
@@ -146,30 +151,42 @@
                            rak::hexchar_to_value(id[5]), rak::hexchar_to_value(id[6]));
 
   } else if (std::isalpha(id[0]) && id[4] == '-' &&
-             std::isxdigit(id[1]) && std::isxdigit(id[2]) && std::isxdigit(id[3])) {
+             std::isxdigit(id[1]) && std::isxdigit(id[2])) {
     // TYPE_THREE_COMPACT.
 
     const_iterator itr = std::find_if(m_containers[TYPE_COMPACT].begin(), m_containers[TYPE_COMPACT].end(),
                                       client_info_equal(id, sizeof_key(TYPE_COMPACT)));
 
-    if (itr != m_containers[TYPE_COMPACT].end())
+    if (itr != m_containers[TYPE_COMPACT].end()) {
+      char c;
+      if (id[3] > 'F' && id[3] < 'a')
+        c = id[3] - 'F' + 0xF;
+      else
+        c = rak::hexchar_to_value(id[3]);
+
       first = print_buffer(first, last, "%s %hhu.%hhu.%hhu", itr->second,
-                           rak::hexchar_to_value(id[1]), rak::hexchar_to_value(id[2]), rak::hexchar_to_value(id[3]));
-    
+                           rak::hexchar_to_value(id[1]), rak::hexchar_to_value(id[2]), c);
+    }
     else
       first = print_buffer(first, last, "unknown %c %hhu.%hhu.%hhu", id[0],
                            rak::hexchar_to_value(id[1]), rak::hexchar_to_value(id[2]), rak::hexchar_to_value(id[3]));
     
-  } else if (std::isalpha(id[0]) && id[2] == '-' && id[4] == '-' && id[6] == '-' &&
-             std::isxdigit(id[1]) && std::isxdigit(id[3]) && std::isxdigit(id[5])) {
+  } else if (std::isalpha(id[0]) && id[2] == '-' && id[7] == '-' &&
+        std::isxdigit(id[1]) && std::isxdigit(id[3])) {
     // TYPE_THREE_SPARSE.
 
     const_iterator itr = std::find_if(m_containers[TYPE_MAINLINE].begin(), m_containers[TYPE_MAINLINE].end(),
                                       client_info_equal(id, sizeof_key(TYPE_MAINLINE)));
 
     if (itr != m_containers[TYPE_MAINLINE].end())
-      first = print_buffer(first, last, "%s %hhu.%hhu.%hhu", itr->second,
-                           rak::hexchar_to_value(id[1]), rak::hexchar_to_value(id[3]), rak::hexchar_to_value(id[5]));
+      if (id[4] == '-')
+        first = print_buffer(first, last, "%s %hhu.%hhu.%hhu", itr->second,
+          rak::hexchar_to_value(id[1]), rak::hexchar_to_value(id[3]),
+          rak::hexchar_to_value(id[5]));
+      else
+        first = print_buffer(first, last, "%s %hhu.%hhu%hhu.%hhu", itr->second,
+          rak::hexchar_to_value(id[1]), rak::hexchar_to_value(id[3]),
+          rak::hexchar_to_value(id[4]), rak::hexchar_to_value(id[6]));
     
     else
       first = print_buffer(first, last, "unknown %c %hhu.%hhu.%hhu", id[0],
@@ -183,6 +200,26 @@
   // checks as they wouldn't be possible to remove/modify.
 
   } else {
+    if (std::strncmp(id, "exbc", 4) == 0) {
+      if (id[4] == 0)
+        first = print_buffer(first, last, "%s %hhu.%02hhu", "BitComet", id[4], id[5]);
+      else
+	first = print_buffer(first, last, "%s %hhu.%hhu", "BitLord", id[4], id[5]);
+    } else if (id[2] == 'B' && id[3] == 'S') {
+      first = print_buffer(first, last, "BitSpirit %hhu.%hhu", id[1], id[0]);
+    } else if (id[0] == '-' && id[1] == 'M' && id[2] == 'L') {
+      first = print_buffer(first, last, "MLDonkey %hhu.%hhu.%hhu", 
+		rak::hexchar_to_value(id[3]), rak::hexchar_to_value(id[5]), rak::hexchar_to_value(id[7]));
+    } else if (id[0] == '-' && id[1] == 'G' && id[2] == '3') {
+      first = print_buffer(first, last, "G3 Torrent");
+    } else if (id[0] == 'e' && id[1] == 'X') {
+      first = print_buffer(first, last, "eXeem");
+    } else if (std::strncmp(id+16, "UDP0", 4) == 0) {
+      first = print_buffer(first, last, "BitSpirit (cloaked)");
+    } else if (std::strncmp(id, "Mbrst", 5) == 0) {
+      first = print_buffer(first, last, "burst! %hhu.%hhu.%hhu",
+		rak::hexchar_to_value(id[5]), rak::hexchar_to_value(id[7]), rak::hexchar_to_value(id[9]));
+    } else
     first = print_buffer(first, last, "unknown");
   }
 
